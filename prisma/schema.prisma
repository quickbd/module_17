// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users{
  id BigInt @id @default(autoincrement())
  firstName String @db.VarChar(50)
  lastName String @db.VarChar(50)
  email String @unique  @db.VarChar(50)
  mobile String @db.VarChar(50)
  password String @db.VarChar(50)
  otp String @db.VarChar(20)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt
  customers customers[]
  categories categories[]
  invoices invoices[]
  invoice_products invoice_products[]
  products products[]
}

model customers{
  id BigInt @id @default(autoincrement()) 
  name String
  email String @db.VarChar(50)
  mobile String @db.VarChar(50)
  user_id BigInt   
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  users users  @relation(fields: [user_id], references: [id] , onDelete:Restrict, onUpdate:Cascade )
  invoices invoices[]
}

model categories{
  id BigInt @id @default(autoincrement()) 
  name String  
  user_id BigInt  
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  users users @relation(fields: [user_id], references: [id] , onDelete:Restrict, onUpdate:Cascade)
  products products[]
}


model invoices{
  id BigInt @id @default(autoincrement()) 
  total String
  discount String @db.VarChar(50)
  vat String @db.VarChar(50)
  payable String @db.VarChar(50)
  user_id BigInt 
  customer_id BigInt 
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  customers customers  @relation(fields: [customer_id], references: [id] , onDelete:Restrict, onUpdate:Cascade )
  users users  @relation(fields: [user_id], references: [id] , onDelete:Restrict, onUpdate:Cascade )
 
  invoice_products invoice_products[]
 }


model products{
  id BigInt @id @default(autoincrement())     
  user_id BigInt 
  category_id BigInt 
  name BigInt
  price String @db.VarChar(50)
  unit String @db.VarChar(50) 
  img_url String  @db.VarChar(50)  
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  users users @relation(fields: [user_id], references: [id] , onDelete:Restrict, onUpdate:Cascade)
  categories categories @relation(fields: [category_id], references: [id] , onDelete:Restrict, onUpdate:Cascade)
  invoice_products invoice_products[]
}

model invoice_products{
  id BigInt @id @default(autoincrement())   
  invoice_id BigInt 
  product_id BigInt
  user_id BigInt 
  qty String @db.VarChar(50)
  sales_price String @db.VarChar(50) 
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt

  invoices invoices @relation(fields: [invoice_id], references: [id] , onDelete:Restrict, onUpdate:Cascade )
  users users @relation(fields: [user_id], references: [id] , onDelete:Restrict, onUpdate:Cascade)
   products products @relation(fields: [product_id], references: [id] , onDelete:Restrict, onUpdate:Cascade)
}

